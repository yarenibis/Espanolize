// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.src.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251016104534_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.src.Models.GramerKural", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KonuId")
                        .HasColumnType("int");

                    b.Property<string>("KuralBaslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KonuId");

                    b.ToTable("GramerKurallar");
                });

            modelBuilder.Entity("api.src.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sira")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("api.src.Models.Konu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CalismaSuresi")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("Zorluk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Konular");
                });

            modelBuilder.Entity("api.src.Models.Ornek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ceviri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GramerKuralId")
                        .HasColumnType("int");

                    b.Property<string>("IspanyolcaOrnek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GramerKuralId");

                    b.ToTable("Ornekler");
                });

            modelBuilder.Entity("api.src.Models.GramerKural", b =>
                {
                    b.HasOne("api.src.Models.Konu", "Konu")
                        .WithMany("Kurallar")
                        .HasForeignKey("KonuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Konu");
                });

            modelBuilder.Entity("api.src.Models.Konu", b =>
                {
                    b.HasOne("api.src.Models.Kategori", "Kategori")
                        .WithMany("Konular")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("api.src.Models.Ornek", b =>
                {
                    b.HasOne("api.src.Models.GramerKural", "GramerKural")
                        .WithMany("Ornekler")
                        .HasForeignKey("GramerKuralId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GramerKural");
                });

            modelBuilder.Entity("api.src.Models.GramerKural", b =>
                {
                    b.Navigation("Ornekler");
                });

            modelBuilder.Entity("api.src.Models.Kategori", b =>
                {
                    b.Navigation("Konular");
                });

            modelBuilder.Entity("api.src.Models.Konu", b =>
                {
                    b.Navigation("Kurallar");
                });
#pragma warning restore 612, 618
        }
    }
}
